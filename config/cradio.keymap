// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define NUM 1
#define NAV 2
#define MOU 3
#define FUNC 4

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

/ {
    chosen {
        zmk,charmap = &charmap_us;
    };
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };
        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_lpar {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp RPAR>;
            layers = <0>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
          display-name = "Base";
            bindings = <
&kp Q         &kp W        &kp E       &kp R        &kp T         &kp Y      &kp U        &kp I        &kp O       &kp P
&ht LSHIFT A  &ht LCTRL S  &ht LGUI D  &ht LALT F   &kp G         &kp H      &ht LALT J   &ht RGUI K  &ht RCTRL L  &ht RSHIFT SEMI
&kp Z         &kp X        &kp C       &kp V        &kp B         &kp N      &kp M        &kp COMMA   &kp DOT     &kp ENTER
                                &kp LALT      &lt NUM SPACE        &kp SPACE    &mo MOU
            >;
        };

        num_layer {
          display-name = "Numbers & symbols";
          bindings = <
&kp N1            &kp N2        &kp N3       &kp N4        &kp N5         &kp N6      &kp N7        &kp N8        &kp N9       &kp N0
            &ht LSHIFT GRAVE  &ht LCTRL APOS  &ht LGUI BSLH  &ht LALT SLASH   &kp LPAR         &kp RPAR      &ht LALT MINUS   &ht RGUI EQUAL  &ht RCTRL LBKT  &ht RSHIFT RBKT
&trans         &trans        &trans       &trans        &trans         &trans      &trans        &trans   &trans     &trans
            &trans      &trans            &mo FUNC    &trans
            >;
        };

        nav_layer {
                  display-name = "Navigation";
          bindings = <
&kp CAPS    &kp UP          &kp ESC       &trans        &kp TAB        &trans      &kp C_BRI_DN     &kp C_BRI_UP        &kp PG_UP       &trans
&kp LEFT    &kp DOWN        &kp RIGHT     &trans        &trans         &kp BSPC    &kp RET          &kp HOME       &ht RCTRL PG_DN  &ht RSHIFT END
&kp C_MUTE  &kp C_VOL_DN    &kp C_VOL_UP  &trans        &trans         &trans      &trans        &kp C_PREV   &kp C_PP     &kp C_NEXT
            &trans          &mo FUNC       &trans    &trans
            >;
        };

        mouse_layer {
          display-name = "Mouse";
          bindings = <
&trans            &mmv MOVE_UP      &trans              &trans        &trans             &trans      &msc SCRL_LEFT     &msc SCRL_DOWN        &msc SCRL_UP       &msc SCRL_RIGHT
&mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &kp LG(X)        &trans         &trans    &mkp LCLK          &mkp MCLK       &mkp RCLK  &trans
&trans            &trans    &trans  &trans        &trans         &trans      &trans        &trans   &trans     &trans
            &trans      &trans       &trans    &trans
            >;
        };

        function_layer {
          display-name = "Function";
          bindings = <
&kp F1        &kp F2      &kp F3              &kp F4        &kp F5             &kp F6      &kp F7     &kp F8        &kp F9       &kp F10
&kp F11           &kp F12    &trans    &trans        &trans         &trans    &trans          &trans       &trans  &trans
&trans            &trans    &trans  &trans        &trans         &trans      &trans        &trans   &trans     &trans
            &trans      &trans       &trans    &trans
            >;
        };        
    };
};
